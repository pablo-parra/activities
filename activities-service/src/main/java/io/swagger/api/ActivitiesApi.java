/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Activity;
import org.threeten.bp.LocalDate;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-08-31T16:22:32.898Z")

@Api(value = "activities", description = "the activities API")
public interface ActivitiesApi {

    @ApiOperation(value = "Finds Activities", nickname = "activitiesCityGet", notes = "optional filter can be applied if properties'category', 'location' or 'district' are provided", response = Activity.class, responseContainer = "List", tags={ "activity", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Activity.class, responseContainer = "List") })
    @RequestMapping(value = "/activities/{city}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Activity>> activitiesCityGet(@ApiParam(value = "City to filter by",required=true) @PathVariable("city") String city,@ApiParam(value = "Category value to filter by") @Valid @RequestParam(value = "category", required = false) String category,@ApiParam(value = "Location value to filter by") @Valid @RequestParam(value = "location", required = false) String location,@ApiParam(value = "District value to filter by") @Valid @RequestParam(value = "district", required = false) String district);


    @ApiOperation(value = "Finds best activity for a given time", nickname = "getActivityByTime", notes = "Returns a single activity", response = Activity.class, tags={ "activity", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Activity.class) })
    @RequestMapping(value = "/activities/{city}/findByCategoryAndDateTime/{category}/{date}/{startTime}/{endTime}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Activity> getActivityByTime(@ApiParam(value = "City to filter by",required=true) @PathVariable("city") String city,@ApiParam(value = "The preferred category for to filter activities",required=true) @PathVariable("category") String category,@ApiParam(value = "Date of the desired day",required=true) @PathVariable("date") LocalDate date,@ApiParam(value = "Desired hour to start the activity",required=true) @PathVariable("startTime") String startTime,@ApiParam(value = "Desired hour to end the activity",required=true) @PathVariable("endTime") String endTime);

}
